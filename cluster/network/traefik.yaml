---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: flux-system
spec:
  targetNamespace: network
  chart:
    spec:
      chart: traefik
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
      version: 9.11.x
  interval: 1h0m0s
  values:
    logs:
      general:
        level: INFO
    deployment:
      podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
    ingressClass:
      enabled: true
      isDefaultClass: true
    ingressRoute:
      dashboard:
        enabled: true
    additionalArguments:
      - "--ping"
      - "--entrypoints.websecure.http.tls"
        #- "--entrypoints.web.http.redirections.entryPoint.to=:443"
        #- "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--api.dashboard=true"
      - "--metrics=true"
      - "--metrics.prometheus.entryPoint=metrics"
    metrics:
      prometheus:
        enabled: true
        entryPoint: metrics
    ports:
      web:
        redirectTo: websecure
      metrics:
        port: 8082
        expose: true
        exposedPort: 8082
    service:
      enabled: true
      type: LoadBalancer
      spec:
        loadBalancerIP: 192.168.1.15      
        externalTrafficPolicy: Local
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-routes
  namespace: network
spec:
  routes:
    - kind: Rule
      match: Host(`longhorn.k.lanquarden.com`)
      services:
        - kind: Service
          name: longhorn-frontend
          namespace: storage
          port: 80
    - kind: Rule
      match: Host(`traefik.k.lanquarden.com`)
      services:
        - kind: TraefikService
          name: api@internal
    - kind: Rule
      match: Host(`grafana.k.lanquarden.com`)
      services:
        - kind: Service
          name: kube-prometheus-stack-grafana
          namespace: monitoring
          port: 80
    - kind: Rule
      match: Host(`prometheus.k.lanquarden.com`)
      services:
        - kind: Service
          name: kube-prometheus-stack-prometheus
          namespace: monitoring
          port: 9090
    - kind: Rule
      match: Host(`alert.k.lanquarden.com`)
      services:
        - kind: Service
          name: kube-prometheus-stack-alertmanager
          namespace: monitoring
          port: 9093
    - kind: Rule
      match: Host(`adguard.k.lanquarden.com`)
      services:
        - kind: Service
          name: network-adguard-adguard-home
          namespace: network
          port: 3000
